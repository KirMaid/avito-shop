version: '3.9'

services:
  app:
    build: .
    container_name: app
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - DATABASE_PORT=${POSTGRES_PORT}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_NAME=${POSTGRES_NAME}
      - DATABASE_HOST=${POSTGRES_HOST}
      - DATABASE_URL=${POSTGRES_URL}
      - SERVER_PORT=${SERVER_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:latest
    volumes:
      - pg-data:/var/lib/postgresql/data
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}'" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s

#  test-postgres:
#    image: postgres:latest
#    container_name: test-postgres
#    environment:
#      POSTGRES_USER: testuser
#      POSTGRES_PASSWORD: testpassword
#      POSTGRES_DB: testdb
#    healthcheck:
#      test: [ "CMD-SHELL", "sh -c 'pg_isready -U testuser -d testdb'" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 10s
#
#  test-redis:
#    image: redis:latest
#    container_name: test-redis
#    environment:
#      REDIS_PASSWORD: "testpassword"
#    healthcheck:
#      test: ["CMD", "redis-cli", "-a", "testpassword", "ping"]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 10s
#
#  integration:
#    build:
#      context: .
#      dockerfile: integration-test/Dockerfile
#    container_name: integration
#    environment:
#      - DATABASE_PORT=5432
#      - DATABASE_USER=testuser
#      - DATABASE_PASSWORD=testpassword
#      - DATABASE_NAME=testdb
#      - DATABASE_HOST=test-postgres
#      - REDIS_HOST=test-redis
#      - REDIS_PORT=6379
#      - REDIS_PASSWORD=testpassword
#      - REDIS_DB=0
#    depends_on:
#      test-postgres:
#        condition: service_healthy
#      test-redis:
#        condition: service_healthy

volumes:
  pg-data: